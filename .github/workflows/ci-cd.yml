name: CI/CD Pipeline

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

jobs:
  test-and-build:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
      
      - name: Install dependencies
        run: |
          npm ci
          cd app && npm ci && cd ..
      
      # Optional step if you have tests
      # - name: Run tests
      #   run: npm test
      
      - name: Build frontend
        run: cd app && npm run build && cd ..
      
      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: build-files
          path: app/dist/
  
  docker-build-push:
    needs: test-and-build
    runs-on: ubuntu-latest
    # Only run on push to main/master, not on PRs
    if: github.event_name == 'push' && (github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master')
    steps:
      - uses: actions/checkout@v3
      
      - name: Download build artifacts
        uses: actions/download-artifact@v3
        with:
          name: build-files
          path: app/dist/
      
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      
      - name: Login to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}
      
      - name: Build and push Docker image
        uses: docker/build-push-action@v4
        with:
          context: .
          push: true
          tags: ${{ secrets.DOCKERHUB_USERNAME }}/drewclark-portfolio:latest,${{ secrets.DOCKERHUB_USERNAME }}/drewclark-portfolio:${{ github.sha }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/drewclark-portfolio:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/drewclark-portfolio:buildcache,mode=max
          build-args: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
