name: CI/CD Pipeline

# Trigger on push to any branch and pull requests to main
on:
  push:
  pull_request:
    branches: [ main ]

# Ensure only one workflow per branch runs at a time
# Cancel in-progress runs when a new workflow is triggered
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    # Add global timeout to prevent hanging builds
    timeout-minutes: 30
    env:
      OPENAI_API_KEY: ${{ secrets.OPENAI_API_KEY }}
      # Set mock mode for tests to avoid API calls
      USE_MOCK_EMBEDDING: 'true'
      USE_MOCK_VECTOR_DB: 'true'
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Cache npm dependencies
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            api/package-lock.json
            app/package-lock.json

      # Install dependencies without Docker to speed up the process
      - name: Install dependencies
        run: |
          npm ci
          cd api && npm ci
          cd ../app && npm ci
      
      # Run tests directly
      - name: Run tests
        run: |
          cd app
          npm test
        # Add specific timeout for test step
        timeout-minutes: 10

  # Only run Docker build & push on main branch or tags
  docker-build-push:
    needs: build-and-test
    if: success() && (github.ref == 'refs/heads/main' || startsWith(github.ref, 'refs/tags/'))
    runs-on: ubuntu-latest
    timeout-minutes: 20
    
    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2

      # Log in to Docker Hub
      - name: Log in to Docker Hub
        uses: docker/login-action@v2
        with:
          username: ${{ secrets.DOCKERHUB_USERNAME }}
          password: ${{ secrets.DOCKERHUB_TOKEN }}

      # Get version tag from package.json
      - name: Get version
        id: package-version
        uses: martinbeentjes/npm-get-version-action@v1.3.1

      # Build and push Docker image with version tag
      - name: Build and push
        uses: docker/build-push-action@v4
        timeout-minutes: 15  # Moved to the step level
        with:
          context: .
          push: true
          tags: |
            ${{ secrets.DOCKERHUB_USERNAME }}/portfolio:latest
            ${{ secrets.DOCKERHUB_USERNAME }}/portfolio:${{ steps.package-version.outputs.current-version }}
          cache-from: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/portfolio:buildcache
          cache-to: type=registry,ref=${{ secrets.DOCKERHUB_USERNAME }}/portfolio:buildcache,mode=max
