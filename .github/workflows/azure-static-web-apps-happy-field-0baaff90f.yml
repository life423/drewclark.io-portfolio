name: Azure Static Web Apps CI/CD

on:
  push:
    branches:
      - main
  pull_request:
    types: [opened, synchronize, reopened, closed]
    branches:
      - main

jobs:
  build_and_deploy_job:
    if: github.event_name == 'push' || (github.event_name == 'pull_request' && github.event.action != 'closed')
    runs-on: ubuntu-latest
    name: Build and Deploy Job
    steps:
      - uses: actions/checkout@v3
        with:
          submodules: true
          lfs: false
          
      # Setup Node.js
      - name: Setup Node.js
        uses: actions/setup-node@v3
        with:
          node-version: '18'
      
      # Create .env.production files with environment variables
      - name: Setup Environment Variables
        run: |
          echo "Creating production environment variables for frontend app"
          echo "VITE_NODE_ENV=production" > app/.env.production
          echo "VITE_API_URL=/api/askGPT" >> app/.env.production
          cat app/.env.production
          
          echo "Creating production environment variables for API"
          echo "# API Production Environment" > api/.env.production
          echo "NODE_ENV=production" >> api/.env.production
          echo "# OPENAI_API_KEY will be set in Azure portal" >> api/.env.production
          cat api/.env.production
      
      # Install API dependencies with fallback
      - name: Install API dependencies
        run: |
          cd api
          # First try with npm ci (should work now that we have package-lock.json)
          npm ci || (echo "npm ci failed, falling back to npm install" && npm install)
          # Verify OpenAI package is installed correctly
          echo "Checking OpenAI package installation:"
          node -e "console.log(require('openai') ? 'OpenAI package loaded successfully' : 'OpenAI package not found')"
          
      # Build and deploy the Static Web App
      - name: Build And Deploy
        id: builddeploy
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_FIELD_0BAAFF90F }}
          repo_token: ${{ secrets.GITHUB_TOKEN }} # Used for Github integrations (i.e. PR comments)
          action: "upload"
          ###### Repository/Build Configurations - These values can be configured to match your app requirements. ######
          # For more information regarding Static Web App workflow configurations, please visit: https://aka.ms/swaworkflowconfig
          app_location: "app"
          api_location: "api" # Api source code path - optional
          output_location: "dist" # Built app content directory - optional
          app_build_command: "npm run build" # Explicitly use our custom build command
          ###### End of Repository/Build Configurations ######
          
      # Enhanced verification of API endpoints after deployment
      - name: Verify API Endpoints
        if: success()
        run: |
          echo "Verifying API endpoints..."
          # Allow some time for function to be fully deployed
          sleep 45
          
          # Try multiple times in case of initial startup delay
          echo "Testing apiTest endpoint (diagnostic)..."
          for i in {1..3}; do
            response=$(curl -s -o response.json -w "%{http_code}" https://www.drewclark.io/api/apiTest -X GET)
            if [ "$response" -eq 200 ]; then
              echo "apiTest endpoint verified successfully!"
              echo "Response highlights:"
              cat response.json | grep -E "environment|OPENAI_API_KEY|isFunctionApp"
              break
            fi
            echo "Attempt $i: apiTest verification returned status $response, retrying after 10s..."
            sleep 10
          done
          
          echo "Testing askGPT endpoint (main API)..."
          for i in {1..3}; do
            response=$(curl -s -o response.json -w "%{http_code}" https://www.drewclark.io/api/askGPT -X GET)
            if [ "$response" -eq 200 ]; then
              echo "askGPT endpoint verified successfully!"
              echo "Response content:"
              cat response.json
              exit 0
            fi
            echo "Attempt $i: askGPT verification returned status $response, retrying after 10s..."
            sleep 10
          done
          
          echo "API verification completed with warnings - check logs"
          # Don't fail the workflow on API verification warnings
          # This is just a health check, not a blocker

  close_pull_request_job:
    if: github.event_name == 'pull_request' && github.event.action == 'closed'
    runs-on: ubuntu-latest
    name: Close Pull Request Job
    steps:
      - name: Close Pull Request
        id: closepullrequest
        uses: Azure/static-web-apps-deploy@v1
        with:
          azure_static_web_apps_api_token: ${{ secrets.AZURE_STATIC_WEB_APPS_API_TOKEN_HAPPY_FIELD_0BAAFF90F }}
          action: "close"
          app_location: "app"
          api_location: "api"
          output_location: "dist"
