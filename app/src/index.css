/* Import component-specific styles */
@import './styles/nprogress.css';
@import './styles/components/progressive-element.css';

/* Font variables - centralizes font-related properties for easier maintenance */
:root {
  --font-lato: 'Lato', sans-serif;
  --font-weight-light: 300;
  --font-weight-regular: 400;
  --font-weight-bold: 700;
  --font-weight-black: 900;
  
  /* Common line heights for better typography */
  --line-height-tight: 1.25;
  --line-height-normal: 1.5;
  --line-height-relaxed: 1.75;
}

/* 
 * These are valid Tailwind CSS directives - ignore CSS linter warnings
 * The @tailwind directive is used by the PostCSS processor and Tailwind
 * to inject CSS into your final stylesheet.
 * See: https://tailwindcss.com/docs/functions-and-directives#tailwind
 */
@tailwind base;
@tailwind components;
@tailwind utilities;

/* Apply global font settings */
@layer base {
  html, body {
    font-family: var(--font-lato);
    font-feature-settings: "kern", "liga", "calt";
    -webkit-font-smoothing: antialiased;
    -moz-osx-font-smoothing: grayscale;
    overflow-x: hidden;
  }
  
  /* Optimize number rendering */
  .numeric {
    font-variant-numeric: tabular-nums;
    font-feature-settings: "tnum";
  }

  /* Large-screen rails variables */
  :root {
    --content-max: 1440px;
    --rail: clamp(24px, 5vw, 128px);
    /* Subtle brand-blue rail; tweak as desired */
    --rail-color: rgba(3, 105, 161, 0.18); /* brandBlue[700] @ 18% */
  }

  /* Side rails for large screens without DOM changes */
  @media (min-width: 1440px) {
    .site-rails {
      position: relative;
    }
    .site-rails::before,
    .site-rails::after {
      content: "";
      position: fixed;
      top: 0;
      bottom: 0;
      width: var(--rail);
      background: var(--rail-color);
      pointer-events: none;
      z-index: 0;
    }
    .site-rails::before { left: 0; }
    .site-rails::after { right: 0; }
    /* Ensure actual content sits above the decorative rails */
    .site-rails > * { position: relative; z-index: 1; }
  }

  /* Scoped container to cap width without affecting full-bleed sections */
  .content-wrap {
    max-width: var(--content-max);
    margin-inline: auto;
    padding-inline: clamp(24px, 2vw, 48px);
  }

  /* On ultra-wide, allow a slightly wider content cap */
  @media (min-width: 2560px) {
    :root { --content-max: 1600px; }
  }
}
