version: '3.8'

services:
  # Development version of the application
  app-dev:
    build:
      context: .
      dockerfile: Dockerfile.dev
    ports:
      - "3000:3000"  # API
      - "5173:5173"  # Vite dev server
    environment:
      - NODE_ENV=development
      - QDRANT_URL=http://qdrant:6333
      - DOCKER_CONTAINER=true
      - OPENAI_API_KEY=${OPENAI_API_KEY}
    volumes:
      # Mount source code for hot reloading
      - ./:/app
      # Prevent node_modules from being overwritten by host
      - /app/node_modules
      - /app/api/node_modules
      - /app/app/node_modules
    depends_on:
      - qdrant
    command: npm run dev:cloud
    networks:
      - portfolio_dev_network
    dns:
      - 8.8.8.8  # Use Google DNS as fallback
    # Add helpful debugging tools for development
    extra_hosts:
      - "host.docker.internal:host-gateway"  # Easy access to host machine
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # Qdrant vector database - same as production but with different ports
  qdrant:
    image: qdrant/qdrant:latest
    volumes:
      - qdrant_dev_data:/qdrant/storage
    ports:
      - "6333:6333"  # REST API
      - "6334:6334"  # GRPC API
    environment:
      - QDRANT_ALLOW_CORS=true
    networks:
      - portfolio_dev_network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:6333/healthz"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

volumes:
  qdrant_dev_data:
  
# Define an explicit network to ensure container communication
networks:
  portfolio_dev_network:
    driver: bridge
