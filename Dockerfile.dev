FROM node:18-alpine

# Install git and build essentials
RUN apk add --no-cache git openssh python3 make g++

# Create app directory
WORKDIR /app

# Copy the scripts directory first
COPY scripts/ ./scripts/

# Copy package files
COPY package*.json ./
COPY api/package*.json ./api/
COPY app/package*.json ./app/

# Modify permissions.js for Docker compatibility
RUN sed -i 's/const { spawn } = require(.child_process.);/const { spawn } = require("child_process");\n\n\/\/ Skip PowerShell in Docker\nfunction setWindowsPermissions() { return Promise.resolve(true); }/' ./scripts/permissions.js

# Install all dependencies including devDependencies
RUN npm install --legacy-peer-deps
RUN cd api && npm install
RUN cd app && npm install --legacy-peer-deps

# We'll mount the source code as a volume in development
# So we don't need to copy it here

# Expose ports for API and frontend dev server
EXPOSE 3000 5173

# Set environment to development
ENV NODE_ENV=development

# Command to start the development servers
CMD ["npm", "run", "dev:cloud"]
